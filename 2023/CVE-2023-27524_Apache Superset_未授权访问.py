#!/usr/bin/env python3
# _*_ coding:utf-8 _*_

import argparse
import requests
import urllib3
import time
import json
import sys
import os
import re

from requests.packages.urllib3.exceptions import InsecureRequestWarning


def title():
    print('+          FOFA:banner="MinIO" || header="MinIO" || title="MinIO Browser"')


def run_proto(target):
    pre_url = f'{target}/login/'
    url = f'{target}/api/v1/database/1'
    host = str(target).split('//')[1]
    if ':' in host:
        host = host.split(':')[0]
    headers = {
        'User-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) '
                      'Chrome/72.0.3626.121 Safari/537.36',
        'Host': f'{host}'
    }
    try:
        requests.packages.urllib3.disable_warnings(InsecureRequestWarning)
        pre_resp = requests.get(url=pre_url, verify=False, timeout=(6, 6), headers=headers, allow_redirects=False)
        cook = pre_resp.headers.get('Set-Cookie').split(';')[0]
        headers1 = {'Cookie': cook,
                    'User-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) '
                                  'Chrome/72.0.3626.121 Safari/537.36',
                    'Host': host}
        resp = requests.get(url=url, verify=False, timeout=(6, 6), headers=headers1, allow_redirects=False)
        if resp.status_code == 200 and '"database_name":' in resp.text:
            return True
        else:
            return False
    except Exception as e:
        # print(e)
        return False


def run(target):
    i = 0
    proto = ['http', 'https']
    while i < 2:
        url = '{}://{}'.format(proto[i], target)
        if run_proto(url):
            return True
        else:
            i = i + 1


if __name__ == '__main__':
    title()
    parse = argparse.ArgumentParser()
    parse.add_argument('-u', '--url', help='ip:port', default='127.0.0.1:8080')
    args = parse.parse_args()
    targ = args.url
    result = run(targ)

    if result:
        print('Exist')
    else:
        print('UnExist')